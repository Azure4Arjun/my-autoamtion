USE [msdb]
GO

/****** Object:  Job [Deadlock detection]    Script Date: 01-08-2019 12:26:29 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 01-08-2019 12:26:29 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Deadlock detection', 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=0, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'deadlock_detection', 
		@category_name=N'[Uncategorized (Local)]', 
		@owner_login_name=N'superuser', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [deadlock mail]    Script Date: 01-08-2019 12:26:29 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'deadlock mail', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'exec dba.dbo.deadlock_detection', 
		@database_name=N'master', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'twice in day', 
		@enabled=1, 
		@freq_type=4, 
		@freq_interval=1, 
		@freq_subday_type=8, 
		@freq_subday_interval=12, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20190708, 
		@active_end_date=99991231, 
		@active_start_time=60000, 
		@active_end_time=235959, 
		@schedule_uid=N'045ee372-13a7-443b-8606-f8c5c61beea6'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO


USE [DBA]
GO

/****** Object:  StoredProcedure [dbo].[deadlock_detection]    Script Date: 01-08-2019 12:27:52 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[deadlock_detection]    
    
AS    
SET NOCOUNT ON     
    
--== This is for SQL 2005 and higher. ==--    
--== We will create a temporary table to hold the error log detail. ==--    
--== Before we create the temporary table, we make sure it does not already exist. ==--    
 IF OBJECT_ID('tempdb.dbo.ErrorLog') IS Not Null    
 BEGIN    
 DROP TABLE tempdb.dbo.ErrorLog    
 END    
 
 
 --== We have checked for the existence of the temporary table and dropped it if it was there. ==--    
 --== Now, we can create the table called tempdb.dbo.ErrorLog ==--    
CREATE TABLE tempdb.dbo.ErrorLog (Id int IDENTITY (1, 1) NOT NULL,     
logdate DATETIME, procInfo VARCHAR(10), ERRORLOG VARCHAR(MAX))    
--== We create a 3 column table to hold the contents of the SQL Server Error log. ==--    
--== Then we insert the actual data from the Error log into our newly created table. ==--    
 INSERT INTO tempdb.dbo.ErrorLog    
 EXEC master.dbo.sp_readerrorlog    
--== With our table created and populated, we can now use the info inside of it. ==--    
 BEGIN    
--== Set a variable to get our instance name. ==--    
--== We do this so the email we receive makes more sense. ==--    
 declare @servername nvarchar(150)  
 --declare @CurrentDateTime as datetime  
 --set @CurrentDateTime = getdate()  
 set @servername = @@servername    
--== We set another variable to create a subject line for the email. ==--     
 declare @mysubject nvarchar(200)    
 set @mysubject = 'Deadlock event notification on server '+@servername+'.'    
 --== Now we will prepare and send the email. Change the email address to suite your environment. ==--     
 EXEC msdb.dbo.sp_send_dbmail @recipients='rahul.belokar@healthindiatpa.com',    
@profile_name='DBA_alert' ,    
@subject = @mysubject,    
@body = 'Deadlock has occurred. View attachment to see the deadlock info',    
@query = 'select logdate, procInfo, ERRORLOG from tempdb.dbo.ErrorLog where Id >= (select TOP 1 Id from tempdb.dbo.ErrorLog WHERE ERRORLOG Like ''%Deadlock encountered%'' order by Id DESC)',    
@query_result_width = 600,    
@attach_query_result_as_file = 1    
 END    
 --== Clean up our process by dropping our temporary table. ==--    
 DROP TABLE tempdb.dbo.ErrorLog 


 -- select * from msdb..sysmail_profile

GO





